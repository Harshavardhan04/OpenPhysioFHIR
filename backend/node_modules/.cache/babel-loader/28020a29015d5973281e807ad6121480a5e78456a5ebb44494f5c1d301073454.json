{"ast":null,"code":"var _jsxFileName = \"/Users/harshmishra/Desktop/Team42_COMP0016/attempt4/frontend/src/containers/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useForm, useFieldArray } from \"react-hook-form\";\n// import { useTheme } from \"@mui/material/styles\";\n// import { Box, TextField, Typography, Button, IconButton, Grid } from \"@mui/material\";\n// import SaveIcon from '@mui/icons-material/Save';\n// import AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\n// import ExitToAppIcon from '@mui/icons-material/ExitToApp';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import { useNavigate } from 'react-router-dom';\n\n// function Dashboard() {\n//     const theme = useTheme();\n//     const navigate = useNavigate();\n//     const [profileData, setProfileData] = useState(null);\n\n//     const { register, control, handleSubmit, formState: { errors }, setValue } = useForm({\n//         defaultValues: {\n//             name: '',\n//             age: '',\n//             nhsNumber: '',\n//             problemDescription: '',\n//             desiredValues: [{ name: '', value: '' }]\n//         }\n//     });\n//     const { fields, append, remove } = useFieldArray({\n//         control,\n//         name: \"desiredValues\"\n//     });\n\n//     useEffect(() => {\n//         axios({\n//             method: \"GET\",\n//             url: \"http://localhost:5000/profile\",\n//         })\n//         .then((response) => {\n//             const res = response.data;\n//             setProfileData({\n//                 name: res.name,\n//                 age: res.age,\n//                 nhsNumber: res.nhsNumber,\n//                 problemDescription: res.problemDescription,\n//                 desiredValues: res.desiredValues,\n//             });\n//             // Setting form values\n//             setValue('name', res.name);\n//             setValue('age', res.age);\n//             setValue('nhsNumber', res.nhsNumber);\n//             setValue('problemDescription', res.problemDescription);\n//             if (res.desiredValues && res.desiredValues.length > 0) {\n//                 res.desiredValues.forEach((value, index) => {\n//                     append({ name: value.name, value: value.value });\n//                 });\n//             }\n//         })\n//         .catch((error) => {\n//             console.log(error);\n//         });\n//     }, [append, setValue]);\n\n//     const onSubmit = (data) => console.log(data);\n\n//     const handleExit = () => {\n//         navigate('/');\n//     };\n\n//     return (\n//       <Box\n//           sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               margin: theme.spacing(4),\n//               padding: theme.spacing(3),\n//               backgroundColor: '#fff',\n//               borderRadius: theme.shape.borderRadius,\n//               boxShadow: theme.shadows[2]\n//           }}\n//       >\n//           <form onSubmit={handleSubmit(onSubmit)}>\n//               <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n//                   <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }}>\n//                       UPDATE PATIENT\n//                   </Typography>\n//                   <Box sx={{ display: 'flex', alignItems: 'center' }}>\n//                       <Typography sx={{ marginRight: theme.spacing(1) }}>Add Field and Value</Typography>\n//                       <IconButton color=\"primary\" aria-label=\"add field\" onClick={() => fields.length < 10 && append({ name: '', value: '' })}>\n//                           <AddCircleOutlineIcon />\n//                       </IconButton>\n//                   </Box>\n//                   <Button variant=\"contained\" endIcon={<ExitToAppIcon />} onClick={handleExit}>\n//                       Exit\n//                   </Button>\n//               </Box>\n\n//               <Grid container spacing={2}>\n//                   <Grid item xs={12} sm={6}>\n//                       <TextField\n//                           fullWidth\n//                           label=\"Name\"\n//                           defaultValue=\"\"\n//                           variant=\"outlined\"\n//                           margin=\"normal\"\n//                           {...register(\"name\", { required: true })}\n//                           error={errors.name}\n//                           helperText={errors.name ? \"Name is required\" : \"\"}\n//                       />\n//                       <TextField\n//                           fullWidth\n//                           label=\"Age\"\n//                           type=\"number\"\n//                           defaultValue=\"\"\n//                           variant=\"outlined\"\n//                           margin=\"normal\"\n//                           {...register(\"age\", { required: true })}\n//                           error={errors.age}\n//                           helperText={errors.age ? \"Age is required\" : \"\"}\n//                       />\n//                       <TextField\n//                           fullWidth\n//                           label=\"NHS Number\"\n//                           defaultValue=\"\"\n//                           variant=\"outlined\"\n//                           margin=\"normal\"\n//                           {...register(\"nhsNumber\", { required: true })}\n//                           error={errors.nhsNumber}\n//                           helperText={errors.nhsNumber ? \"NHS Number is required\" : \"\"}\n//                       />\n//                       <TextField\n//                           fullWidth\n//                           label=\"Problem Description\"\n//                           multiline\n//                           rows={4}\n//                           variant=\"outlined\"\n//                           margin=\"normal\"\n//                           {...register(\"problemDescription\", { required: true })}\n//                           error={errors.problemDescription}\n//                           helperText={errors.problemDescription ? \"Problem Description is required\" : \"\"}\n//                       />\n//                   </Grid>\n//                   <Grid item xs={12} sm={6}>\n//                       {fields.map((item, index) => (\n//                           <Box key={item.id} sx={{ display: 'flex', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n//                               <TextField\n//                                   label={`Desired Value ${index + 1} Name`}\n//                                   variant=\"outlined\"\n//                                   sx={{ mr: 1, flex: 1 }}\n//                                   {...register(`desiredValues.${index}.name`)}\n//                               />\n//                               <TextField\n//                                   label={`Desired Value ${index + 1} Value`}\n//                                   variant=\"outlined\"\n//                                   sx={{ mr: 1, flex: 1 }}\n//                                   {...register(`desiredValues.${index}.value`)}\n//                               />\n//                               <IconButton aria-label=\"delete\" onClick={() => remove(index)}>\n//                                   <DeleteIcon />\n//                               </IconButton>\n//                           </Box>\n//                       ))}\n//                   </Grid>\n//               </Grid>\n\n//               <Box sx={{ display: 'flex', justifyContent: 'flex-start', gap: theme.spacing(2), marginTop: theme.spacing(2) }}>\n//                   <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} type=\"submit\">\n//                       Save\n//                   </Button>\n//               </Box>\n//           </form>\n//       </Box>\n//   );\n\n// }\n\n// export default Dashboard;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useForm, useFieldArray } from \"react-hook-form\";\n// import { useTheme } from \"@mui/material/styles\";\n// import { Box, TextField, Typography, Button, IconButton, Grid } from \"@mui/material\";\n// import SaveIcon from '@mui/icons-material/Save';\n// import AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\n// import ExitToAppIcon from '@mui/icons-material/ExitToApp';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import { useNavigate } from 'react-router-dom';\n\n// function Dashboard() {\n//     const theme = useTheme();\n//     const navigate = useNavigate();\n//     const { register, control, handleSubmit, formState: { errors }, setValue } = useForm({\n//         defaultValues: {\n//             name: '',\n//             age: '',\n//             nhsNumber: '',\n//             problemDescription: '',\n//             desiredValues: [{ name: '', value: '' }]\n//         }\n//     });\n\n//     const { fields, append, remove } = useFieldArray({\n//         control,\n//         name: \"desiredValues\"\n//     });\n\n//     useEffect(() => {\n//         axios.get(\"http://localhost:5000/profile\")\n//             .then(({ data }) => {\n//                 setValue('name', data.name);\n//                 setValue('age', data.age);\n//                 setValue('nhsNumber', data.nhsNumber);\n//                 setValue('problemDescription', data.problemDescription);\n//                 if (data.desiredValues && data.desiredValues.length > 0) {\n//                     setValue('desiredValues', data.desiredValues);\n//                 } else {\n//                     remove();\n//                 }\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//     }, [setValue, remove]);\n\n//     const onSubmit = (data) => {\n//         axios.post(\"http://localhost:5000/profile\", data)\n//             .then(response => {\n//                 console.log(\"Profile updated\", response.data);\n//             })\n//             .catch(error => {\n//                 console.error(\"Error updating profile:\", error);\n//             });\n//     };\n\n//     const handleExit = () => {\n//         navigate('/');\n//     };\n\n//     return (\n//         <Box\n//             sx={{\n//                 display: 'flex',\n//                 flexDirection: 'column',\n//                 margin: theme.spacing(4),\n//                 padding: theme.spacing(3),\n//                 backgroundColor: '#fff',\n//                 borderRadius: theme.shape.borderRadius,\n//                 boxShadow: theme.shadows[2]\n//             }}\n//         >\n//             <form onSubmit={handleSubmit(onSubmit)}>\n//                 <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n//                     <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }}>UPDATE PATIENT</Typography>\n//                     <IconButton color=\"primary\" aria-label=\"add field\" onClick={() => append({ name: '', value: '' })}>\n//                         <AddCircleOutlineIcon />\n//                     </IconButton>\n//                     <Button variant=\"contained\" endIcon={<ExitToAppIcon />} onClick={handleExit}>Exit</Button>\n//                 </Box>\n\n//                 <Grid container spacing={2}>\n//                     {/* Static fields */}\n//                     <Grid item xs={12} sm={6}>\n//                         <TextField fullWidth label=\"Name\" variant=\"outlined\" margin=\"normal\" {...register(\"name\", { required: true })} error={!!errors.name} helperText={errors.name ? \"Name is required\" : \"\"} />\n//                         <TextField fullWidth label=\"Age\" type=\"number\" variant=\"outlined\" margin=\"normal\" {...register(\"age\", { required: true })} error={!!errors.age} helperText={errors.age ? \"Age is required\" : \"\"} />\n//                         <TextField fullWidth label=\"NHS Number\" variant=\"outlined\" margin=\"normal\" {...register(\"nhsNumber\", { required: true })} error={!!errors.nhsNumber} helperText={errors.nhsNumber ? \"NHS Number is required\" : \"\"} />\n//                         <TextField fullWidth label=\"Problem Description\" multiline rows={4} variant=\"outlined\" margin=\"normal\" {...register(\"problemDescription\", { required: true })} error={!!errors.problemDescription} helperText={errors.problemDescription ? \"Problem Description is required\" : \"\"} />\n//                     </Grid>\n//                     {/* Dynamic fields */}\n//                     <Grid item xs={12} sm={6}>\n//                         {fields.map((item, index) => (\n//                             <Box key={item.id} sx={{ display: 'flex', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n//                                 <TextField label={`Value ${index + 1} Name`} variant=\"outlined\" sx={{ mr: 1, flex: 1 }} {...register(`desiredValues.${index}.name`)} />\n//                                 <TextField label={`Value ${index + 1} Value`} variant=\"outlined\" sx={{ mr: 1, flex: 1 }} {...register(`desiredValues.${index}.value`)} />\n//                                 <IconButton aria-label=\"delete\" onClick={() => remove(index)}><DeleteIcon /></IconButton>\n//                             </Box>\n//                         ))}\n//                     </Grid>\n//                 </Grid>\n\n//                 <Box sx={{ display: 'flex', justifyContent: 'flex-start', gap: theme.spacing(2), marginTop: theme.spacing(2) }}>\n//                     <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} type=\"submit\">Save</Button>\n//                 </Box>\n//             </form>\n//         </Box>\n//     );\n// }\n\n// export default Dashboard;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { Box, TextField, Typography, Button, IconButton, Grid, MenuItem } from \"@mui/material\";\nimport SaveIcon from '@mui/icons-material/Save';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useNavigate } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [sessionData, setSessionData] = useState([]);\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    setValue,\n    getValues\n  } = useForm({\n    defaultValues: {\n      sessionDate: null,\n      name: '',\n      age: '',\n      nhsNumber: '',\n      problemDescription: '',\n      sessionValues: [{\n        name: '',\n        value: ''\n      }]\n    }\n  });\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: \"sessionValues\"\n  });\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/profile\").then(({\n      data\n    }) => {\n      if (data.data && data.data.length > 0) {\n        const lastSession = data.data[data.data.length - 1];\n        setSessionData(lastSession);\n        setValue('sessionValues', lastSession.desiredValues);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [setValue]);\n  const onSubmit = data => {\n    const updatedData = {\n      ...getValues(),\n      data: [...sessionData, {\n        date: selectedDate.toISOString().split('T')[0],\n        ...data\n      }]\n    };\n    axios.post(\"http://localhost:5000/profile\", updatedData).then(response => {\n      console.log(\"Session saved\", response.data);\n    }).catch(error => {\n      console.error(\"Error saving session:\", error);\n    });\n  };\n  const handleExit = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: theme.spacing(4),\n        padding: theme.spacing(3),\n        backgroundColor: '#fff',\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[2]\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: theme.spacing(2)\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: \"UPDATE SESSION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            \"aria-label\": \"add field\",\n            onClick: () => append({\n              name: '',\n              value: ''\n            }),\n            children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(ExitToAppIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 62\n            }, this),\n            onClick: handleExit,\n            children: \"Exit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          label: \"Session Date\",\n          value: selectedDate,\n          onChange: newValue => {\n            setSelectedDate(newValue);\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            marginTop: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: fields.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: theme.spacing(2)\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: `Value ${index + 1} Name`,\n                variant: \"outlined\",\n                sx: {\n                  mr: 1,\n                  flex: 1\n                },\n                ...register(`sessionValues.${index}.name`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: `Value ${index + 1} Value`,\n                variant: \"outlined\",\n                sx: {\n                  mr: 1,\n                  flex: 1\n                },\n                ...register(`sessionValues.${index}.value`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"delete\",\n                onClick: () => remove(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 99\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 37\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            gap: theme.spacing(2),\n            marginTop: theme.spacing(2)\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 80\n            }, this),\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"vkLYb61xVvUi2rrmQPQoExMZNrQ=\", false, function () {\n  return [useTheme, useNavigate, useForm, useFieldArray];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","useForm","useFieldArray","useTheme","Box","TextField","Typography","Button","IconButton","Grid","MenuItem","SaveIcon","AddCircleOutlineIcon","ExitToAppIcon","DeleteIcon","useNavigate","AdapterDateFns","LocalizationProvider","DatePicker","jsxDEV","_jsxDEV","Dashboard","_s","theme","navigate","selectedDate","setSelectedDate","Date","sessionData","setSessionData","register","control","handleSubmit","formState","errors","setValue","getValues","defaultValues","sessionDate","name","age","nhsNumber","problemDescription","sessionValues","value","fields","append","remove","get","then","data","length","lastSession","desiredValues","catch","error","console","log","onSubmit","updatedData","date","toISOString","split","post","response","handleExit","dateAdapter","children","sx","display","flexDirection","margin","spacing","padding","backgroundColor","borderRadius","shape","boxShadow","shadows","justifyContent","alignItems","marginBottom","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","endIcon","label","onChange","newValue","renderInput","params","container","marginTop","item","xs","sm","map","index","mr","flex","id","gap","startIcon","type","_c","$RefreshReg$"],"sources":["/Users/harshmishra/Desktop/Team42_COMP0016/attempt4/frontend/src/containers/Dashboard/Dashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useForm, useFieldArray } from \"react-hook-form\";\n// import { useTheme } from \"@mui/material/styles\";\n// import { Box, TextField, Typography, Button, IconButton, Grid } from \"@mui/material\";\n// import SaveIcon from '@mui/icons-material/Save';\n// import AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\n// import ExitToAppIcon from '@mui/icons-material/ExitToApp';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import { useNavigate } from 'react-router-dom';\n\n\n// function Dashboard() {\n//     const theme = useTheme();\n//     const navigate = useNavigate();\n//     const [profileData, setProfileData] = useState(null);\n\n//     const { register, control, handleSubmit, formState: { errors }, setValue } = useForm({\n//         defaultValues: {\n//             name: '',\n//             age: '',\n//             nhsNumber: '',\n//             problemDescription: '',\n//             desiredValues: [{ name: '', value: '' }]\n//         }\n//     });\n//     const { fields, append, remove } = useFieldArray({\n//         control,\n//         name: \"desiredValues\"\n//     });\n\n//     useEffect(() => {\n//         axios({\n//             method: \"GET\",\n//             url: \"http://localhost:5000/profile\",\n//         })\n//         .then((response) => {\n//             const res = response.data;\n//             setProfileData({\n//                 name: res.name,\n//                 age: res.age,\n//                 nhsNumber: res.nhsNumber,\n//                 problemDescription: res.problemDescription,\n//                 desiredValues: res.desiredValues,\n//             });\n//             // Setting form values\n//             setValue('name', res.name);\n//             setValue('age', res.age);\n//             setValue('nhsNumber', res.nhsNumber);\n//             setValue('problemDescription', res.problemDescription);\n//             if (res.desiredValues && res.desiredValues.length > 0) {\n//                 res.desiredValues.forEach((value, index) => {\n//                     append({ name: value.name, value: value.value });\n//                 });\n//             }\n//         })\n//         .catch((error) => {\n//             console.log(error);\n//         });\n//     }, [append, setValue]);\n\n//     const onSubmit = (data) => console.log(data);\n\n//     const handleExit = () => {\n//         navigate('/');\n//     };\n\n//     return (\n//       <Box\n//           sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               margin: theme.spacing(4),\n//               padding: theme.spacing(3),\n//               backgroundColor: '#fff',\n//               borderRadius: theme.shape.borderRadius,\n//               boxShadow: theme.shadows[2]\n//           }}\n//       >\n//           <form onSubmit={handleSubmit(onSubmit)}>\n//               <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n//                   <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }}>\n//                       UPDATE PATIENT\n//                   </Typography>\n//                   <Box sx={{ display: 'flex', alignItems: 'center' }}>\n//                       <Typography sx={{ marginRight: theme.spacing(1) }}>Add Field and Value</Typography>\n//                       <IconButton color=\"primary\" aria-label=\"add field\" onClick={() => fields.length < 10 && append({ name: '', value: '' })}>\n//                           <AddCircleOutlineIcon />\n//                       </IconButton>\n//                   </Box>\n//                   <Button variant=\"contained\" endIcon={<ExitToAppIcon />} onClick={handleExit}>\n//                       Exit\n//                   </Button>\n//               </Box>\n  \n//               <Grid container spacing={2}>\n//                   <Grid item xs={12} sm={6}>\n//                       <TextField\n//                           fullWidth\n//                           label=\"Name\"\n//                           defaultValue=\"\"\n//                           variant=\"outlined\"\n//                           margin=\"normal\"\n//                           {...register(\"name\", { required: true })}\n//                           error={errors.name}\n//                           helperText={errors.name ? \"Name is required\" : \"\"}\n//                       />\n//                       <TextField\n//                           fullWidth\n//                           label=\"Age\"\n//                           type=\"number\"\n//                           defaultValue=\"\"\n//                           variant=\"outlined\"\n//                           margin=\"normal\"\n//                           {...register(\"age\", { required: true })}\n//                           error={errors.age}\n//                           helperText={errors.age ? \"Age is required\" : \"\"}\n//                       />\n//                       <TextField\n//                           fullWidth\n//                           label=\"NHS Number\"\n//                           defaultValue=\"\"\n//                           variant=\"outlined\"\n//                           margin=\"normal\"\n//                           {...register(\"nhsNumber\", { required: true })}\n//                           error={errors.nhsNumber}\n//                           helperText={errors.nhsNumber ? \"NHS Number is required\" : \"\"}\n//                       />\n//                       <TextField\n//                           fullWidth\n//                           label=\"Problem Description\"\n//                           multiline\n//                           rows={4}\n//                           variant=\"outlined\"\n//                           margin=\"normal\"\n//                           {...register(\"problemDescription\", { required: true })}\n//                           error={errors.problemDescription}\n//                           helperText={errors.problemDescription ? \"Problem Description is required\" : \"\"}\n//                       />\n//                   </Grid>\n//                   <Grid item xs={12} sm={6}>\n//                       {fields.map((item, index) => (\n//                           <Box key={item.id} sx={{ display: 'flex', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n//                               <TextField\n//                                   label={`Desired Value ${index + 1} Name`}\n//                                   variant=\"outlined\"\n//                                   sx={{ mr: 1, flex: 1 }}\n//                                   {...register(`desiredValues.${index}.name`)}\n//                               />\n//                               <TextField\n//                                   label={`Desired Value ${index + 1} Value`}\n//                                   variant=\"outlined\"\n//                                   sx={{ mr: 1, flex: 1 }}\n//                                   {...register(`desiredValues.${index}.value`)}\n//                               />\n//                               <IconButton aria-label=\"delete\" onClick={() => remove(index)}>\n//                                   <DeleteIcon />\n//                               </IconButton>\n//                           </Box>\n//                       ))}\n//                   </Grid>\n//               </Grid>\n  \n//               <Box sx={{ display: 'flex', justifyContent: 'flex-start', gap: theme.spacing(2), marginTop: theme.spacing(2) }}>\n//                   <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} type=\"submit\">\n//                       Save\n//                   </Button>\n//               </Box>\n//           </form>\n//       </Box>\n//   );\n  \n// }\n\n// export default Dashboard;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useForm, useFieldArray } from \"react-hook-form\";\n// import { useTheme } from \"@mui/material/styles\";\n// import { Box, TextField, Typography, Button, IconButton, Grid } from \"@mui/material\";\n// import SaveIcon from '@mui/icons-material/Save';\n// import AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\n// import ExitToAppIcon from '@mui/icons-material/ExitToApp';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import { useNavigate } from 'react-router-dom';\n\n// function Dashboard() {\n//     const theme = useTheme();\n//     const navigate = useNavigate();\n//     const { register, control, handleSubmit, formState: { errors }, setValue } = useForm({\n//         defaultValues: {\n//             name: '',\n//             age: '',\n//             nhsNumber: '',\n//             problemDescription: '',\n//             desiredValues: [{ name: '', value: '' }]\n//         }\n//     });\n\n//     const { fields, append, remove } = useFieldArray({\n//         control,\n//         name: \"desiredValues\"\n//     });\n\n//     useEffect(() => {\n//         axios.get(\"http://localhost:5000/profile\")\n//             .then(({ data }) => {\n//                 setValue('name', data.name);\n//                 setValue('age', data.age);\n//                 setValue('nhsNumber', data.nhsNumber);\n//                 setValue('problemDescription', data.problemDescription);\n//                 if (data.desiredValues && data.desiredValues.length > 0) {\n//                     setValue('desiredValues', data.desiredValues);\n//                 } else {\n//                     remove();\n//                 }\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//     }, [setValue, remove]);\n\n//     const onSubmit = (data) => {\n//         axios.post(\"http://localhost:5000/profile\", data)\n//             .then(response => {\n//                 console.log(\"Profile updated\", response.data);\n//             })\n//             .catch(error => {\n//                 console.error(\"Error updating profile:\", error);\n//             });\n//     };\n\n//     const handleExit = () => {\n//         navigate('/');\n//     };\n\n//     return (\n//         <Box\n//             sx={{\n//                 display: 'flex',\n//                 flexDirection: 'column',\n//                 margin: theme.spacing(4),\n//                 padding: theme.spacing(3),\n//                 backgroundColor: '#fff',\n//                 borderRadius: theme.shape.borderRadius,\n//                 boxShadow: theme.shadows[2]\n//             }}\n//         >\n//             <form onSubmit={handleSubmit(onSubmit)}>\n//                 <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n//                     <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }}>UPDATE PATIENT</Typography>\n//                     <IconButton color=\"primary\" aria-label=\"add field\" onClick={() => append({ name: '', value: '' })}>\n//                         <AddCircleOutlineIcon />\n//                     </IconButton>\n//                     <Button variant=\"contained\" endIcon={<ExitToAppIcon />} onClick={handleExit}>Exit</Button>\n//                 </Box>\n\n//                 <Grid container spacing={2}>\n//                     {/* Static fields */}\n//                     <Grid item xs={12} sm={6}>\n//                         <TextField fullWidth label=\"Name\" variant=\"outlined\" margin=\"normal\" {...register(\"name\", { required: true })} error={!!errors.name} helperText={errors.name ? \"Name is required\" : \"\"} />\n//                         <TextField fullWidth label=\"Age\" type=\"number\" variant=\"outlined\" margin=\"normal\" {...register(\"age\", { required: true })} error={!!errors.age} helperText={errors.age ? \"Age is required\" : \"\"} />\n//                         <TextField fullWidth label=\"NHS Number\" variant=\"outlined\" margin=\"normal\" {...register(\"nhsNumber\", { required: true })} error={!!errors.nhsNumber} helperText={errors.nhsNumber ? \"NHS Number is required\" : \"\"} />\n//                         <TextField fullWidth label=\"Problem Description\" multiline rows={4} variant=\"outlined\" margin=\"normal\" {...register(\"problemDescription\", { required: true })} error={!!errors.problemDescription} helperText={errors.problemDescription ? \"Problem Description is required\" : \"\"} />\n//                     </Grid>\n//                     {/* Dynamic fields */}\n//                     <Grid item xs={12} sm={6}>\n//                         {fields.map((item, index) => (\n//                             <Box key={item.id} sx={{ display: 'flex', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n//                                 <TextField label={`Value ${index + 1} Name`} variant=\"outlined\" sx={{ mr: 1, flex: 1 }} {...register(`desiredValues.${index}.name`)} />\n//                                 <TextField label={`Value ${index + 1} Value`} variant=\"outlined\" sx={{ mr: 1, flex: 1 }} {...register(`desiredValues.${index}.value`)} />\n//                                 <IconButton aria-label=\"delete\" onClick={() => remove(index)}><DeleteIcon /></IconButton>\n//                             </Box>\n//                         ))}\n//                     </Grid>\n//                 </Grid>\n\n//                 <Box sx={{ display: 'flex', justifyContent: 'flex-start', gap: theme.spacing(2), marginTop: theme.spacing(2) }}>\n//                     <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} type=\"submit\">Save</Button>\n//                 </Box>\n//             </form>\n//         </Box>\n//     );\n// }\n\n// export default Dashboard;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { Box, TextField, Typography, Button, IconButton, Grid, MenuItem } from \"@mui/material\";\nimport SaveIcon from '@mui/icons-material/Save';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useNavigate } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\n\nfunction Dashboard() {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [sessionData, setSessionData] = useState([]);\n    const { register, control, handleSubmit, formState: { errors }, setValue, getValues } = useForm({\n        defaultValues: {\n            sessionDate: null,\n            name: '',\n            age: '',\n            nhsNumber: '',\n            problemDescription: '',\n            sessionValues: [{ name: '', value: '' }]\n        }\n    });\n\n    const { fields, append, remove } = useFieldArray({\n        control,\n        name: \"sessionValues\"\n    });\n\n    useEffect(() => {\n        axios.get(\"http://localhost:5000/profile\")\n            .then(({ data }) => {\n                if (data.data && data.data.length > 0) {\n                    const lastSession = data.data[data.data.length - 1];\n                    setSessionData(lastSession);\n                    setValue('sessionValues', lastSession.desiredValues);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [setValue]);\n\n    const onSubmit = (data) => {\n        const updatedData = {\n            ...getValues(),\n            data: [...sessionData, { date: selectedDate.toISOString().split('T')[0], ...data }]\n        };\n        axios.post(\"http://localhost:5000/profile\", updatedData)\n            .then(response => {\n                console.log(\"Session saved\", response.data);\n            })\n            .catch(error => {\n                console.error(\"Error saving session:\", error);\n            });\n    };\n\n    const handleExit = () => {\n        navigate('/');\n    };\n\n    return (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    margin: theme.spacing(4),\n                    padding: theme.spacing(3),\n                    backgroundColor: '#fff',\n                    borderRadius: theme.shape.borderRadius,\n                    boxShadow: theme.shadows[2]\n                }}\n            >\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n                        <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }}>UPDATE SESSION</Typography>\n                        <IconButton color=\"primary\" aria-label=\"add field\" onClick={() => append({ name: '', value: '' })}>\n                            <AddCircleOutlineIcon />\n                        </IconButton>\n                        <Button variant=\"contained\" endIcon={<ExitToAppIcon />} onClick={handleExit}>Exit</Button>\n                    </Box>\n\n                    <DatePicker\n                        label=\"Session Date\"\n                        value={selectedDate}\n                        onChange={(newValue) => {\n                            setSelectedDate(newValue);\n                        }}\n                        renderInput={(params) => <TextField {...params} />}\n                    />\n\n                    <Grid container spacing={2} sx={{ marginTop: 2 }}>\n                        {/* Dynamic fields for session values */}\n                        <Grid item xs={12} sm={6}>\n                            {fields.map((item, index) => (\n                                <Box key={item.id} sx={{ display: 'flex', alignItems: 'center', marginBottom: theme.spacing(2) }}>\n                                    <TextField label={`Value ${index + 1} Name`} variant=\"outlined\" sx={{ mr: 1, flex: 1 }} {...register(`sessionValues.${index}.name`)} />\n                                    <TextField label={`Value ${index + 1} Value`} variant=\"outlined\" sx={{ mr: 1, flex: 1 }} {...register(`sessionValues.${index}.value`)} />\n                                    <IconButton aria-label=\"delete\" onClick={() => remove(index)}><DeleteIcon /></IconButton>\n                                </Box>\n                            ))}\n                        </Grid>\n                    </Grid>\n\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-start', gap: theme.spacing(2), marginTop: theme.spacing(2) }}>\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} type=\"submit\">Save</Button>\n                    </Box>\n                </form>\n            </Box>\n        </LocalizationProvider>\n    );\n}\n\nexport default Dashboard;\n\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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"},"metadata":{},"sourceType":"module","externalDependencies":[]}